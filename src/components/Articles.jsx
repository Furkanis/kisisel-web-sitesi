import { useState } from "react";
import useTheme from "../components/themeHook";

const Articles = () => {
  const { isLightMode } = useTheme(); // Global state kullanÄ±mÄ±
  const [expandedArticleId, setExpandedArticleId] = useState(null);

  const articles = [
    {
      id: 1,
      title: "React ile Komponent TabanlÄ± Web GeliÅŸtirme",
      shortDescription: "React, bileÅŸen tabanlÄ± yapÄ±sÄ± ile modern web geliÅŸtirme sÃ¼reÃ§lerinde devrim yarattÄ±.",
      fullDescription: `React, Facebook tarafÄ±ndan geliÅŸtirilen ve bileÅŸen (component) tabanlÄ± bir JavaScript kÃ¼tÃ¼phanesidir. 
      React'in en bÃ¼yÃ¼k avantajlarÄ±ndan biri, UI bileÅŸenlerini tekrar kullanÄ±labilir parÃ§alara ayÄ±rarak modÃ¼ler ve sÃ¼rdÃ¼rÃ¼lebilir kod yazmayÄ± saÄŸlamasÄ±dÄ±r.
      \nVirtual DOM sayesinde, React sadece deÄŸiÅŸen bileÅŸenleri gÃ¼ncelleyerek yÃ¼ksek performans sunar. Bu sayede, bÃ¼yÃ¼k Ã¶lÃ§ekli projelerde bile yÃ¼ksek hÄ±zda 
      Ã§alÄ±ÅŸan kullanÄ±cÄ± arayÃ¼zleri geliÅŸtirmek mÃ¼mkÃ¼ndÃ¼r. AyrÄ±ca, React Hooks ile fonksiyonel bileÅŸenlerde state yÃ¶netimi oldukÃ§a kolay hale gelmiÅŸtir.
      \nBu makalede, Reactâ€™in temel bileÅŸen yapÄ±sÄ±nÄ±, Virtual DOMâ€™un nasÄ±l Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ± ve dinamik kullanÄ±cÄ± arayÃ¼zleri oluÅŸtururken dikkat edilmesi gereken noktalarÄ± inceleyeceÄŸiz.`,
    },
    {
      id: 2,
      title: "Node.js ile Backend GeliÅŸtirme",
      shortDescription: "Node.js, JavaScript'i yalnÄ±zca tarayÄ±cÄ±da deÄŸil, sunucu tarafÄ±nda da kullanmanÄ±zÄ± saÄŸlar.",
      fullDescription: `Node.js, asenkron ve olay gÃ¼dÃ¼mlÃ¼ yapÄ±sÄ± sayesinde yÃ¼ksek performanslÄ± ve Ã¶lÃ§eklenebilir backend uygulamalarÄ± geliÅŸtirmeye olanak tanÄ±r. 
      Ã–zellikle Express.js gibi framework'lerle birlikte kullanÄ±ldÄ±ÄŸÄ±nda, API geliÅŸtirme sÃ¼reÃ§leri oldukÃ§a kolay ve hÄ±zlÄ± bir hale gelir.
      \nNode.jsâ€™in en bÃ¼yÃ¼k avantajlarÄ±ndan biri, JavaScript'i hem frontend hem de backend tarafÄ±nda kullanarak tam bir full-stack geliÅŸtirme deneyimi sunmasÄ±dÄ±r. 
      AynÄ± zamanda, paket yÃ¶netim sistemi olan npm sayesinde binlerce aÃ§Ä±k kaynaklÄ± modÃ¼le eriÅŸim saÄŸlanabilir.
      \nBu makalede, Node.jsâ€™in temel bileÅŸenlerini, Express.js ile API geliÅŸtirme sÃ¼reÃ§lerini ve veritabanÄ± entegrasyonlarÄ±nÄ± ele alacaÄŸÄ±z.`,
    },
    {
      id: 3,
      title: "Tailwind CSS ile Modern TasarÄ±mlar",
      shortDescription: "Tailwind CSS, hÄ±z ve esneklik sunarak modern web tasarÄ±mÄ±nÄ± kolaylaÅŸtÄ±rÄ±r.",
      fullDescription: `Tailwind CSS, Ã¶nceden tanÄ±mlanmÄ±ÅŸ bileÅŸenler yerine utility-first yaklaÅŸÄ±mÄ± ile Ã§alÄ±ÅŸan bir CSS frameworkâ€™Ã¼dÃ¼r. 
      Bu sayede, geliÅŸtiriciler doÄŸrudan HTML iÃ§erisinde sÄ±nÄ±flarÄ± kullanarak hÄ±zlÄ± ve Ã¶zelleÅŸtirilebilir tasarÄ±mlar oluÅŸturabilir.
      \nBootstrap gibi geleneksel CSS frameworkâ€™lerinden farklÄ± olarak, Tailwind ile tasarÄ±m tamamen geliÅŸtiricinin kontrolÃ¼ndedir. 
      Ã–zellikle responsive tasarÄ±m yapmak iÃ§in mobil Ã¶ncelikli sÄ±nÄ±flarÄ± sayesinde bÃ¼yÃ¼k kolaylÄ±k saÄŸlar.
      \nBu makalede, Tailwind CSSâ€™in temel kullanÄ±mÄ±nÄ±, avantajlarÄ±nÄ± ve modern projelerde nasÄ±l uygulanabileceÄŸini Ã¶ÄŸreneceksiniz.`,
    },
    {
      id: 4,
      title: "Tailwind CSS ile Responsive TasarÄ±m",
      shortDescription: "Mobil uyumlu ve Ã¶lÃ§eklenebilir web arayÃ¼zleri oluÅŸturmak artÄ±k daha kolay.",
      fullDescription: `Tailwind CSS ile responsive tasarÄ±m oluÅŸturmak, esnek grid sistemleri ve hazÄ±r medya sorgularÄ± sayesinde oldukÃ§a kolaydÄ±r. 
      Mobil Ã¶ncelikli (mobile-first) tasarÄ±m yaklaÅŸÄ±mÄ±, kÃ¼Ã§Ã¼k ekranlar iÃ§in optimize edilmiÅŸ bir deneyim sunarken, daha bÃ¼yÃ¼k ekranlara Ã¶lÃ§eklenebilir.
      \nÃ–rneÄŸin, Tailwindâ€™in "sm", "md", "lg", "xl" gibi sÄ±nÄ±flarÄ± sayesinde her ekran boyutuna Ã¶zel stiller belirlenebilir. 
      \nBu makalede, Tailwind CSS kullanarak mobil ve geniÅŸ ekranlar iÃ§in uyumlu tasarÄ±mlar oluÅŸturmanÄ±n en iyi yÃ¶ntemlerini keÅŸfedeceÄŸiz.`,
    },
  ];

  const toggleArticle = (id) => {
    setExpandedArticleId(expandedArticleId === id ? null : id);
  };

  return (
    <div
      id="articles"
      className={`min-h-screen transition-all duration-500 px-8 py-16 ${
        isLightMode
          ? "bg-white text-black"
          : "bg-gradient-to-r from-gray-900 via-gray-800 to-black text-white"
      }`}
    >
      <h1 className="text-4xl font-bold text-center mb-10">
        <span className={`${isLightMode ? "text-gray-900" : "text-teal-500"}`}>MAKALELERÄ°M</span>
      </h1>

      {/* Makaleler Listesi */}
      <div className="space-y-4 max-w-6xl mx-auto">
        {articles.map((article) => (
          <div
            key={article.id}
            className={`rounded-lg p-8 transition-all duration-300 shadow-md hover:shadow-xl ${
              isLightMode
                ? "bg-gray-100 text-gray-900 shadow-gray-400"
                : "bg-gray-800 text-white shadow-teal-500"
            }`}
          >
            <h2
              className={`text-xl font-bold cursor-pointer mb-4 ${
                isLightMode ? "text-gray-800" : "text-teal-500"
              }`}
              onClick={() => toggleArticle(article.id)}
            >
              {article.title}
            </h2>
            <p className="text-lg">
              {expandedArticleId === article.id ? article.fullDescription : article.shortDescription}
            </p>

          
            <button
              onClick={() => toggleArticle(article.id)}
              className={`mt-4 px-4 py-2 rounded-lg transition-all ${
                isLightMode ? "bg-gray-700 text-white hover:bg-gray-900" : "bg-teal-600 hover:bg-teal-800"
              }`}
            >
              {expandedArticleId === article.id ? "Daha Az GÃ¶ster" : "DevamÄ±nÄ± Oku"}
            </button>
          </div>
        ))}
      </div>

      {/* Medium HesabÄ± Butonu */}
      <div className="text-center mt-16">
        <p className="text-2xl mb-6">Daha fazla makale iÃ§in Medium hesabÄ±mÄ± takip etmeyi unutmayÄ±n! ðŸ˜Š</p>
        <a
          href="https://medium.com/@isfurkan0411"
          target="_blank"
          rel="noopener noreferrer"
          className="relative inline-block group"
        >
          <span className="absolute inset-0 w-full h-full bg-gray-500 rounded-full blur-md group-hover:blur-lg transition-all duration-300"></span>
          <span className="relative px-8 py-3 font-semibold bg-gray-700 text-white rounded-full group-hover:bg-gray-800 transition-all duration-300">
            Medium HesabÄ±m
          </span>
        </a>
      </div>
    </div>
  );
};

export default Articles;
